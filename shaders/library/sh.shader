#define SH_SHADER

#ifndef COMMON_SHADER
  #error Missing common.shader include in SH header
#endif

float SH(vec3 p, int l, int m) {
    if(l == 0) {
        return 0.5*sqrt(1.0*INV_PI);
    } else if(l == 1 && m == -1) {
        return p.y * sqrt(0.25*3.0*INV_PI);
    } else if(l == 1 && m == 0) {
        return p.z * sqrt(0.25*3.0*INV_PI);
    } else if(l == 1 && m == 1) {
        return p.x * sqrt(0.25*3.0*INV_PI);
    } else if(l == 2 && m == -2) {
        return p.x * p.y * 0.5 * sqrt(15.0*INV_PI);
    } else if(l == 2 && m == -1) {
        return p.y * p.z * 0.5 * sqrt(15.0*INV_PI);
    } else if(l == 2 && m == 0) {
        return (-p.x*p.x - p.y*p.y + 2.0*p.z*p.z) * 0.25 * sqrt(5.0*INV_PI);
    } else if(l == 2 && m == 1) {
        return p.z * p.x * 0.5 * sqrt(15.0*INV_PI);
    } else if(l == 2 && m == 2) {
        return (p.x*p.x - p.y*p.y) * 0.25 * sqrt(15.0*INV_PI);
    }

    return 0.0;
}


/* Evaluate all SH base functions Y_{l,m}(w) for a given direction w up to
 * order `order`.
 */

void SH_Fast(in vec3 w, in int order, out float pOut[100]) {
   float fX = w.x;
   float fY = w.y;
   float fZ = w.z;

   order = order+1;

   float fC0,fS0,fC1,fS1,fPa,fPb,fPc;
   if(order == 1) {
      pOut[0] = 0.282094791774;

   } else if(order == 2) {
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;

   } else if(order == 3) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPc =  0.546274215296;
      pOut[8] = fPc*fC1;
      pOut[4] = fPc*fS1;

   } else if(order == 4) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPc =  -0.590043589927;
      pOut[15] = fPc*fC0;
      pOut[9] = fPc*fS0;

   } else if(order == 5) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      pOut[20] = ((fZ* 1.9843134833)*pOut[ 12])+( -1.00623058987*pOut[ 6]);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fPa = fZ*((fZ2* -4.6833258049)+ 2.00713963067);
      pOut[21] = fPa*fC0;
      pOut[19] = fPa*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fPc = ( 3.31161143515*fZ2)+ -0.473087347879;
      pOut[22] = fPc*fC1;
      pOut[18] = fPc*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.590043589927;
      pOut[15] = fPa*fC0;
      pOut[9] = fPa*fS0;
      fPb =  -1.77013076978*fZ;
      pOut[23] = fPb*fC0;
      pOut[17] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPc =  0.625835735449;
      pOut[24] = fPc*fC1;
      pOut[16] = fPc*fS1;

   } else if(order == 6) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      pOut[20] = ((fZ* 1.9843134833)*pOut[ 12])+( -1.00623058987*pOut[ 6]);
      pOut[30] = ((fZ* 1.98997487421)*pOut[ 20])+( -1.00285307284*pOut[ 12]);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fPa = fZ*((fZ2* -4.6833258049)+ 2.00713963067);
      pOut[21] = fPa*fC0;
      pOut[19] = fPa*fS0;
      fPb = ((fZ* 2.03100960116)*fPa)+( -0.991031208965*fPc);
      pOut[31] = fPb*fC0;
      pOut[29] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fPc = ( 3.31161143515*fZ2)+ -0.473087347879;
      pOut[22] = fPc*fC1;
      pOut[18] = fPc*fS1;
      fPa = fZ*((fZ2* 7.19030517746)+ -2.39676839249);
      pOut[32] = fPa*fC1;
      pOut[28] = fPa*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.590043589927;
      pOut[15] = fPa*fC0;
      pOut[9] = fPa*fS0;
      fPb =  -1.77013076978*fZ;
      pOut[23] = fPb*fC0;
      pOut[17] = fPb*fS0;
      fPc = ( -4.40314469492*fZ2)+ 0.489238299435;
      pOut[33] = fPc*fC0;
      pOut[27] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.625835735449;
      pOut[24] = fPa*fC1;
      pOut[16] = fPa*fS1;
      fPb =  2.07566231488*fZ;
      pOut[34] = fPb*fC1;
      pOut[26] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPc =  -0.65638205684;
      pOut[35] = fPc*fC0;
      pOut[25] = fPc*fS0;

   } else if(order == 7) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      pOut[20] = ((fZ* 1.9843134833)*pOut[ 12])+( -1.00623058987*pOut[ 6]);
      pOut[30] = ((fZ* 1.98997487421)*pOut[ 20])+( -1.00285307284*pOut[ 12]);
      pOut[42] = ((fZ* 1.99304345718)*pOut[ 30])+( -1.00154202096*pOut[ 20]);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fPa = fZ*((fZ2* -4.6833258049)+ 2.00713963067);
      pOut[21] = fPa*fC0;
      pOut[19] = fPa*fS0;
      fPb = ((fZ* 2.03100960116)*fPa)+( -0.991031208965*fPc);
      pOut[31] = fPb*fC0;
      pOut[29] = fPb*fS0;
      fPc = ((fZ* 2.02131498924)*fPb)+( -0.995226703056*fPa);
      pOut[43] = fPc*fC0;
      pOut[41] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fPc = ( 3.31161143515*fZ2)+ -0.473087347879;
      pOut[22] = fPc*fC1;
      pOut[18] = fPc*fS1;
      fPa = fZ*((fZ2* 7.19030517746)+ -2.39676839249);
      pOut[32] = fPa*fC1;
      pOut[28] = fPa*fS1;
      fPb = ((fZ* 2.11394181566)*fPa)+( -0.973610120462*fPc);
      pOut[44] = fPb*fC1;
      pOut[40] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.590043589927;
      pOut[15] = fPa*fC0;
      pOut[9] = fPa*fS0;
      fPb =  -1.77013076978*fZ;
      pOut[23] = fPb*fC0;
      pOut[17] = fPb*fS0;
      fPc = ( -4.40314469492*fZ2)+ 0.489238299435;
      pOut[33] = fPc*fC0;
      pOut[27] = fPc*fS0;
      fPa = fZ*((fZ2* -10.1332578547)+ 2.76361577854);
      pOut[45] = fPa*fC0;
      pOut[39] = fPa*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.625835735449;
      pOut[24] = fPa*fC1;
      pOut[16] = fPa*fS1;
      fPb =  2.07566231488*fZ;
      pOut[34] = fPb*fC1;
      pOut[26] = fPb*fS1;
      fPc = ( 5.55021390802*fZ2)+ -0.504564900729;
      pOut[46] = fPc*fC1;
      pOut[38] = fPc*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.65638205684;
      pOut[35] = fPa*fC0;
      pOut[25] = fPa*fS0;
      fPb =  -2.36661916223*fZ;
      pOut[47] = fPb*fC0;
      pOut[37] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPc =  0.683184105192;
      pOut[48] = fPc*fC1;
      pOut[36] = fPc*fS1;

   } else if(order == 8) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      pOut[20] = ((fZ* 1.9843134833)*pOut[ 12])+( -1.00623058987*pOut[ 6]);
      pOut[30] = ((fZ* 1.98997487421)*pOut[ 20])+( -1.00285307284*pOut[ 12]);
      pOut[42] = ((fZ* 1.99304345718)*pOut[ 30])+( -1.00154202096*pOut[ 20]);
      pOut[56] = ((fZ* 1.99489143482)*pOut[ 42])+( -1.00092721392*pOut[ 30]);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fPa = fZ*((fZ2* -4.6833258049)+ 2.00713963067);
      pOut[21] = fPa*fC0;
      pOut[19] = fPa*fS0;
      fPb = ((fZ* 2.03100960116)*fPa)+( -0.991031208965*fPc);
      pOut[31] = fPb*fC0;
      pOut[29] = fPb*fS0;
      fPc = ((fZ* 2.02131498924)*fPb)+( -0.995226703056*fPa);
      pOut[43] = fPc*fC0;
      pOut[41] = fPc*fS0;
      fPa = ((fZ* 2.01556443707)*fPc)+( -0.997155044022*fPb);
      pOut[57] = fPa*fC0;
      pOut[55] = fPa*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fPc = ( 3.31161143515*fZ2)+ -0.473087347879;
      pOut[22] = fPc*fC1;
      pOut[18] = fPc*fS1;
      fPa = fZ*((fZ2* 7.19030517746)+ -2.39676839249);
      pOut[32] = fPa*fC1;
      pOut[28] = fPa*fS1;
      fPb = ((fZ* 2.11394181566)*fPa)+( -0.973610120462*fPc);
      pOut[44] = fPb*fC1;
      pOut[40] = fPb*fS1;
      fPc = ((fZ* 2.08166599947)*fPb)+( -0.984731927835*fPa);
      pOut[58] = fPc*fC1;
      pOut[54] = fPc*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.590043589927;
      pOut[15] = fPa*fC0;
      pOut[9] = fPa*fS0;
      fPb =  -1.77013076978*fZ;
      pOut[23] = fPb*fC0;
      pOut[17] = fPb*fS0;
      fPc = ( -4.40314469492*fZ2)+ 0.489238299435;
      pOut[33] = fPc*fC0;
      pOut[27] = fPc*fS0;
      fPa = fZ*((fZ2* -10.1332578547)+ 2.76361577854);
      pOut[45] = fPa*fC0;
      pOut[39] = fPa*fS0;
      fPb = ((fZ* 2.20794021658)*fPa)+( -0.9594032236*fPc);
      pOut[59] = fPb*fC0;
      pOut[53] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.625835735449;
      pOut[24] = fPa*fC1;
      pOut[16] = fPa*fS1;
      fPb =  2.07566231488*fZ;
      pOut[34] = fPb*fC1;
      pOut[26] = fPb*fS1;
      fPc = ( 5.55021390802*fZ2)+ -0.504564900729;
      pOut[46] = fPc*fC1;
      pOut[38] = fPc*fS1;
      fPa = fZ*((fZ2* 13.4918050467)+ -3.11349347232);
      pOut[60] = fPa*fC1;
      pOut[52] = fPa*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.65638205684;
      pOut[35] = fPa*fC0;
      pOut[25] = fPa*fS0;
      fPb =  -2.36661916223*fZ;
      pOut[47] = fPb*fC0;
      pOut[37] = fPb*fS0;
      fPc = ( -6.74590252336*fZ2)+ 0.51891557872;
      pOut[61] = fPc*fC0;
      pOut[51] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.683184105192;
      pOut[48] = fPa*fC1;
      pOut[36] = fPa*fS1;
      fPb =  2.6459606618*fZ;
      pOut[62] = fPb*fC1;
      pOut[50] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPc =  -0.707162732525;
      pOut[63] = fPc*fC0;
      pOut[49] = fPc*fS0;

   } else if(order == 9) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      pOut[20] = ((fZ* 1.9843134833)*pOut[ 12])+( -1.00623058987*pOut[ 6]);
      pOut[30] = ((fZ* 1.98997487421)*pOut[ 20])+( -1.00285307284*pOut[ 12]);
      pOut[42] = ((fZ* 1.99304345718)*pOut[ 30])+( -1.00154202096*pOut[ 20]);
      pOut[56] = ((fZ* 1.99489143482)*pOut[ 42])+( -1.00092721392*pOut[ 30]);
      pOut[72] = ((fZ* 1.99608992783)*pOut[ 56])+( -1.00060078107*pOut[ 42]);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fPa = fZ*((fZ2* -4.6833258049)+ 2.00713963067);
      pOut[21] = fPa*fC0;
      pOut[19] = fPa*fS0;
      fPb = ((fZ* 2.03100960116)*fPa)+( -0.991031208965*fPc);
      pOut[31] = fPb*fC0;
      pOut[29] = fPb*fS0;
      fPc = ((fZ* 2.02131498924)*fPb)+( -0.995226703056*fPa);
      pOut[43] = fPc*fC0;
      pOut[41] = fPc*fS0;
      fPa = ((fZ* 2.01556443707)*fPc)+( -0.997155044022*fPb);
      pOut[57] = fPa*fC0;
      pOut[55] = fPa*fS0;
      fPb = ((fZ* 2.01186954041)*fPa)+( -0.99816681789*fPc);
      pOut[73] = fPb*fC0;
      pOut[71] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fPc = ( 3.31161143515*fZ2)+ -0.473087347879;
      pOut[22] = fPc*fC1;
      pOut[18] = fPc*fS1;
      fPa = fZ*((fZ2* 7.19030517746)+ -2.39676839249);
      pOut[32] = fPa*fC1;
      pOut[28] = fPa*fS1;
      fPb = ((fZ* 2.11394181566)*fPa)+( -0.973610120462*fPc);
      pOut[44] = fPb*fC1;
      pOut[40] = fPb*fS1;
      fPc = ((fZ* 2.08166599947)*fPb)+( -0.984731927835*fPa);
      pOut[58] = fPc*fC1;
      pOut[54] = fPc*fS1;
      fPa = ((fZ* 2.06155281281)*fPc)+( -0.99033793766*fPb);
      pOut[74] = fPa*fC1;
      pOut[70] = fPa*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.590043589927;
      pOut[15] = fPa*fC0;
      pOut[9] = fPa*fS0;
      fPb =  -1.77013076978*fZ;
      pOut[23] = fPb*fC0;
      pOut[17] = fPb*fS0;
      fPc = ( -4.40314469492*fZ2)+ 0.489238299435;
      pOut[33] = fPc*fC0;
      pOut[27] = fPc*fS0;
      fPa = fZ*((fZ2* -10.1332578547)+ 2.76361577854);
      pOut[45] = fPa*fC0;
      pOut[39] = fPa*fS0;
      fPb = ((fZ* 2.20794021658)*fPa)+( -0.9594032236*fPc);
      pOut[59] = fPb*fC0;
      pOut[53] = fPb*fS0;
      fPc = ((fZ* 2.1532216877)*fPb)+( -0.97521738656*fPa);
      pOut[75] = fPc*fC0;
      pOut[69] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.625835735449;
      pOut[24] = fPa*fC1;
      pOut[16] = fPa*fS1;
      fPb =  2.07566231488*fZ;
      pOut[34] = fPb*fC1;
      pOut[26] = fPb*fS1;
      fPc = ( 5.55021390802*fZ2)+ -0.504564900729;
      pOut[46] = fPc*fC1;
      pOut[38] = fPc*fS1;
      fPa = fZ*((fZ2* 13.4918050467)+ -3.11349347232);
      pOut[60] = fPa*fC1;
      pOut[52] = fPa*fS1;
      fPb = ((fZ* 2.30488611432)*fPa)+( -0.948176387355*fPc);
      pOut[76] = fPb*fC1;
      pOut[68] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.65638205684;
      pOut[35] = fPa*fC0;
      pOut[25] = fPa*fS0;
      fPb =  -2.36661916223*fZ;
      pOut[47] = fPb*fC0;
      pOut[37] = fPb*fS0;
      fPc = ( -6.74590252336*fZ2)+ 0.51891557872;
      pOut[61] = fPc*fC0;
      pOut[51] = fPc*fS0;
      fPa = fZ*((fZ2* -17.2495531105)+ 3.4499106221);
      pOut[77] = fPa*fC0;
      pOut[67] = fPa*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.683184105192;
      pOut[48] = fPa*fC1;
      pOut[36] = fPa*fS1;
      fPb =  2.6459606618*fZ;
      pOut[62] = fPb*fC1;
      pOut[50] = fPb*fS1;
      fPc = ( 7.98499149089*fZ2)+ -0.53233276606;
      pOut[78] = fPc*fC1;
      pOut[66] = fPc*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.707162732525;
      pOut[63] = fPa*fC0;
      pOut[49] = fPa*fS0;
      fPb =  -2.9157066407*fZ;
      pOut[79] = fPb*fC0;
      pOut[65] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPc =  0.728926660175;
      pOut[80] = fPc*fC1;
      pOut[64] = fPc*fS1;

   } else if(order == 10) {
      float fZ2 = fZ*fZ;
      pOut[0] = 0.282094791774;
      pOut[2] =  0.488602511903*fZ;
      pOut[6] = ( 0.946174695758*fZ2)+ -0.315391565253;
      pOut[12] = fZ*((fZ2* 1.86588166295)+ -1.11952899777);
      pOut[20] = ((fZ* 1.9843134833)*pOut[ 12])+( -1.00623058987*pOut[ 6]);
      pOut[30] = ((fZ* 1.98997487421)*pOut[ 20])+( -1.00285307284*pOut[ 12]);
      pOut[42] = ((fZ* 1.99304345718)*pOut[ 30])+( -1.00154202096*pOut[ 20]);
      pOut[56] = ((fZ* 1.99489143482)*pOut[ 42])+( -1.00092721392*pOut[ 30]);
      pOut[72] = ((fZ* 1.99608992783)*pOut[ 56])+( -1.00060078107*pOut[ 42]);
      pOut[90] = ((fZ* 1.99691119507)*pOut[ 72])+( -1.00041143799*pOut[ 56]);
      fC0 = fX;
      fS0 = fY;
      fPa =  -0.488602511903;
      pOut[3] = fPa*fC0;
      pOut[1] = fPa*fS0;
      fPb =  -1.09254843059*fZ;
      pOut[7] = fPb*fC0;
      pOut[5] = fPb*fS0;
      fPc = ( -2.28522899732*fZ2)+ 0.457045799464;
      pOut[13] = fPc*fC0;
      pOut[11] = fPc*fS0;
      fPa = fZ*((fZ2* -4.6833258049)+ 2.00713963067);
      pOut[21] = fPa*fC0;
      pOut[19] = fPa*fS0;
      fPb = ((fZ* 2.03100960116)*fPa)+( -0.991031208965*fPc);
      pOut[31] = fPb*fC0;
      pOut[29] = fPb*fS0;
      fPc = ((fZ* 2.02131498924)*fPb)+( -0.995226703056*fPa);
      pOut[43] = fPc*fC0;
      pOut[41] = fPc*fS0;
      fPa = ((fZ* 2.01556443707)*fPc)+( -0.997155044022*fPb);
      pOut[57] = fPa*fC0;
      pOut[55] = fPa*fS0;
      fPb = ((fZ* 2.01186954041)*fPa)+( -0.99816681789*fPc);
      pOut[73] = fPb*fC0;
      pOut[71] = fPb*fS0;
      fPc = ((fZ* 2.00935312974)*fPb)+( -0.998749217772*fPa);
      pOut[91] = fPc*fC0;
      pOut[89] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.546274215296;
      pOut[8] = fPa*fC1;
      pOut[4] = fPa*fS1;
      fPb =  1.44530572132*fZ;
      pOut[14] = fPb*fC1;
      pOut[10] = fPb*fS1;
      fPc = ( 3.31161143515*fZ2)+ -0.473087347879;
      pOut[22] = fPc*fC1;
      pOut[18] = fPc*fS1;
      fPa = fZ*((fZ2* 7.19030517746)+ -2.39676839249);
      pOut[32] = fPa*fC1;
      pOut[28] = fPa*fS1;
      fPb = ((fZ* 2.11394181566)*fPa)+( -0.973610120462*fPc);
      pOut[44] = fPb*fC1;
      pOut[40] = fPb*fS1;
      fPc = ((fZ* 2.08166599947)*fPb)+( -0.984731927835*fPa);
      pOut[58] = fPc*fC1;
      pOut[54] = fPc*fS1;
      fPa = ((fZ* 2.06155281281)*fPc)+( -0.99033793766*fPb);
      pOut[74] = fPa*fC1;
      pOut[70] = fPa*fS1;
      fPb = ((fZ* 2.04812235836)*fPa)+( -0.99348527267*fPc);
      pOut[92] = fPb*fC1;
      pOut[88] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.590043589927;
      pOut[15] = fPa*fC0;
      pOut[9] = fPa*fS0;
      fPb =  -1.77013076978*fZ;
      pOut[23] = fPb*fC0;
      pOut[17] = fPb*fS0;
      fPc = ( -4.40314469492*fZ2)+ 0.489238299435;
      pOut[33] = fPc*fC0;
      pOut[27] = fPc*fS0;
      fPa = fZ*((fZ2* -10.1332578547)+ 2.76361577854);
      pOut[45] = fPa*fC0;
      pOut[39] = fPa*fS0;
      fPb = ((fZ* 2.20794021658)*fPa)+( -0.9594032236*fPc);
      pOut[59] = fPb*fC0;
      pOut[53] = fPb*fS0;
      fPc = ((fZ* 2.1532216877)*fPb)+( -0.97521738656*fPa);
      pOut[75] = fPc*fC0;
      pOut[69] = fPc*fS0;
      fPa = ((fZ* 2.11804417119)*fPc)+( -0.983662844979*fPb);
      pOut[93] = fPa*fC0;
      pOut[87] = fPa*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.625835735449;
      pOut[24] = fPa*fC1;
      pOut[16] = fPa*fS1;
      fPb =  2.07566231488*fZ;
      pOut[34] = fPb*fC1;
      pOut[26] = fPb*fS1;
      fPc = ( 5.55021390802*fZ2)+ -0.504564900729;
      pOut[46] = fPc*fC1;
      pOut[38] = fPc*fS1;
      fPa = fZ*((fZ2* 13.4918050467)+ -3.11349347232);
      pOut[60] = fPa*fC1;
      pOut[52] = fPa*fS1;
      fPb = ((fZ* 2.30488611432)*fPa)+( -0.948176387355*fPc);
      pOut[76] = fPb*fC1;
      pOut[68] = fPb*fS1;
      fPc = ((fZ* 2.22917715071)*fPb)+( -0.967152839723*fPa);
      pOut[94] = fPc*fC1;
      pOut[86] = fPc*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.65638205684;
      pOut[35] = fPa*fC0;
      pOut[25] = fPa*fS0;
      fPb =  -2.36661916223*fZ;
      pOut[47] = fPb*fC0;
      pOut[37] = fPb*fS0;
      fPc = ( -6.74590252336*fZ2)+ 0.51891557872;
      pOut[61] = fPc*fC0;
      pOut[51] = fPc*fS0;
      fPa = fZ*((fZ2* -17.2495531105)+ 3.4499106221);
      pOut[77] = fPa*fC0;
      pOut[67] = fPa*fS0;
      fPb = ((fZ* 2.40163634692)*fPa)+( -0.939224604204*fPc);
      pOut[95] = fPb*fC0;
      pOut[85] = fPb*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.683184105192;
      pOut[48] = fPa*fC1;
      pOut[36] = fPa*fS1;
      fPb =  2.6459606618*fZ;
      pOut[62] = fPb*fC1;
      pOut[50] = fPb*fS1;
      fPc = ( 7.98499149089*fZ2)+ -0.53233276606;
      pOut[78] = fPc*fC1;
      pOut[66] = fPc*fS1;
      fPa = fZ*((fZ2* 21.3928901909)+ -3.77521591604);
      pOut[96] = fPa*fC1;
      pOut[84] = fPa*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPa =  -0.707162732525;
      pOut[63] = fPa*fC0;
      pOut[49] = fPa*fS0;
      fPb =  -2.9157066407*fZ;
      pOut[79] = fPb*fC0;
      pOut[65] = fPb*fS0;
      fPc = ( -9.26339318285*fZ2)+ 0.544905481344;
      pOut[97] = fPc*fC0;
      pOut[83] = fPc*fS0;
      fC1 = (fX*fC0)-(fY*fS0);
      fS1 = (fX*fS0)+(fY*fC0);
      fPa =  0.728926660175;
      pOut[80] = fPa*fC1;
      pOut[64] = fPa*fS1;
      fPb =  3.17731764895*fZ;
      pOut[98] = fPb*fC1;
      pOut[82] = fPb*fS1;
      fC0 = (fX*fC1)-(fY*fS1);
      fS0 = (fX*fS1)+(fY*fC1);
      fPc =  -0.748900951853;
      pOut[99] = fPc*fC0;
      pOut[81] = fPc*fS0;

   }
}